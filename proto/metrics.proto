syntax = "proto3";

import "google/protobuf/wrappers.proto";

package metrics;

option go_package = "monitoring/proto";

// Metrics represents a single metric data point, including its identifier,
// type, and value. It supports both gauge and counter metric types.
message Metrics {
  // Delta is used for counter metrics to represent a change in value.
  // 'optional' in proto3 is the default and need not be explicitly specified.
  google.protobuf.Int64Value delta = 1;

  // Value is used for gauge metrics to represent a measurement value.
  google.protobuf.DoubleValue value = 2;

  // ID is the unique identifier of the metric.
  string id = 3;

  // MType is the type of the metric, such as gauge or counter.
  string mType = 4;
}

message MetricsArray {
  repeated Metrics objects = 1;
  bytes Metrics = 2;
}

message Empty {
}

service Monitoring {
  rpc Ping(Empty) returns (Empty);
  rpc UpdateMetric(Metrics) returns (Metrics);
  rpc GetMetric(Metrics) returns (Metrics);
  rpc MassUpdateMetrics(MetricsArray) returns (Empty);
  rpc GetAllMetrics(Empty) returns (MetricsArray);
}
